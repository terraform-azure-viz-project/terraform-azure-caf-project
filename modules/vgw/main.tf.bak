locals {
  prefix = "vgw"
  app    = "vpn"
  env    = var.environment
  loc    = var.location_short
  instance = "001"
  name   = "${local.prefix}-${local.app}-${local.env}-${local.loc}-${local.instance}"
}

resource "azurerm_public_ip" "vgw_pip" {
  name                = "${local.name}-pip"
  location            = var.location
  resource_group_name = var.rg_name
  allocation_method   = "Dynamic"
  tags                = var.resource_tags
}

resource "azurerm_virtual_network_gateway" "vgw" {
  name                = local.name
  location            = var.location
  resource_group_name = var.rg_name
  type                = "Vpn"
  vpn_type            = "RouteBased"
  sku                 = "VpnGw1"
  tags                = var.resource_tags
  ip_configuration {
    public_ip_address_id          = azurerm_public_ip.vgw_pip.id
    private_ip_address_allocation = "Dynamic"
    subnet_id                     = var.subnet_id
  }
}

# Optional: Query existing resources for naming
data "azurerm_resources" "existing_vgws" {
  type                = "Microsoft.Network/virtualNetworkGateways"
  resource_group_name = var.rg_name
  required_tags       = var.resource_tags
}

locals {
  existing_names = [for res in try(data.azurerm_resources.existing_vgws.resources, []) : res.name if can(regex("^${local.prefix}-${local.app}-${local.env}-${local.loc}-\\d{3}$", res.name))]
  counts = [for name in local.existing_names : tonumber(substr(name, -3, 3))]
  max    = length(local.counts) > 0 ? max(local.counts...) : 0
}
